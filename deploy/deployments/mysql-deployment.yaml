apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-deployment
  namespace: up-pay
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      terminationGracePeriodSeconds: 60
      securityContext:
        fsGroup: 999
      initContainers:
        - name: init-mysql
          image: mysql:8.3-oraclelinux8
          command: ['sh', '-c', 'if [ ! -d /var/lib/mysql/mysql ]; then mysqld --initialize-insecure --user=mysql; fi && chown -R mysql:mysql /var/lib/mysql && chmod 750 /var/lib/mysql']
          volumeMounts:
            - name: mysql-persistent-storage
              mountPath: /var/lib/mysql
      containers:
        - name: mysql
          image: mysql:8.3-oraclelinux8
          command: ["sh", "-c", "exec docker-entrypoint.sh mysqld"]
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                configMapKeyRef:
                  name: mysql-config
                  key: mysql-root-password
            - name: MYSQL_USER
              valueFrom:
                configMapKeyRef:
                  name: mysql-config
                  key: mysql-user
            - name: MYSQL_PASSWORD
              valueFrom:
                configMapKeyRef:
                  name: mysql-config
                  key: mysql-password
            - name: MYSQL_DATABASE
              valueFrom:
                configMapKeyRef:
                  name: mysql-config
                  key: mysql-database
          ports:
            - containerPort: 3306
          livenessProbe:
            exec:
              command: ["mysqladmin", "ping", "-uroot", "-proot"]
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
          readinessProbe:
            exec:
              command: ["mysqladmin", "ping", "-uroot", "-proot"]
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 1
          volumeMounts:
            - name: mysql-persistent-storage
              mountPath: /var/lib/mysql
      volumes:
        - name: mysql-persistent-storage
          persistentVolumeClaim:
            claimName: mysql-pv-claim